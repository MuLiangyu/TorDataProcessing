
#pragma once
#include <string>
#include <boost/unordered_map.hpp>

enum Key {
	EMPTY,
	INVALID,

	/* crypto keys */
	CRYPTO_BEGIN,
	CRYPTO_END,

	/* descriptor keys (in alphabetic order) */
	A,
	ACCEPT,
	ALLOW_SINGLE_HOP_EXITS,
	BANDWIDTH,
	BANDWIDTH_WEIGHTS,
	BRIDGE_IPS,
	BRIDGE_IP_TRANSPORTS,
	BRIDGE_IP_VERSIONS,
	BRIDGE_POOL_ASSIGNMENT,
	BRIDGE_STATS_END,
	CACHES_EXTRA_INFO,
	CELL_CIRCUITS_PER_DECILE,
	CELL_PROCESSED_CELLS,
	CELL_QUEUED_CELLS,
	CELL_STATS_END,
	CELL_TIME_IN_QUEUE,
	CLIENT_VERSIONS,
	CONN_BI_DIRECT,
	CONSENSUS_METHOD,
	CONSENSUS_METHODS,
	CONTACT,
	DIRCACHEPORT,
	DIRECTORY_FOOTER,
	DIRECTORY_SIGNATURE,
	DIRREQ_READ_HISTORY,
	DIRREQ_STATS_END,
	DIRREQ_V2_DIRECT_DL,
	DIRREQ_V2_IPS,
	DIRREQ_V2_REQS,
	DIRREQ_V2_RESP,
	DIRREQ_V2_SHARE,
	DIRREQ_V2_TUNNELED_DL,
	DIRREQ_V3_DIRECT_DL,
	DIRREQ_V3_IPS,
	DIRREQ_V3_REQS,
	DIRREQ_V3_RESP,
	DIRREQ_V3_SHARE,
	DIRREQ_V3_TUNNELED_DL,
	DIRREQ_WRITE_HISTORY,
	DIR_ADDRESS,
	DIR_IDENTITY_KEY,
	DIR_KEY_CERTIFICATE_VERSION,
	DIR_KEY_CERTIFICATION,
	DIR_KEY_CROSSCERT,
	DIR_KEY_EXPIRES,
	DIR_KEY_PUBLISHED,
	DIR_OPTIONS,
	DIR_SIGNING_KEY,
	DIR_SOURCE,
	ENTRY_IPS,
	ENTRY_STATS_END,
	EVENTDNS,
	EXIT_KIBIBYTES_READ,
	EXIT_KIBIBYTES_WRITTEN,
	EXIT_STATS_END,
	EXIT_STREAMS_OPENED,
	EXTRA_INFO,
	EXTRA_INFO_DIGEST,
	FAMILY,
	FINGERPRINT,
	FLAG_THRESHOLDS,
	FRESH_UNTIL,
	GEOIP6_DB_DIGEST,
	GEOIP_CLIENT_ORIGINS,
	GEOIP_DB_DIGEST,
	GEOIP_START_TIME,
	HIBERNATING,
	HIDDEN_SERVICE_DIR,
	HIDSERV_DIR_ONIONS_SEEN,
	HIDSERV_REND_RELAYED_CELLS,
	HIDSERV_STATS_END,
	ID,
	IDENTITY_ED25519,
	IPV6_POLICY,
	KNOWN_FLAGS,
	LEGACY_DIR_KEY,
	LEGACY_KEY,
	M,
	MASTER_KEY_ED25519,
	NETWORK_STATUS_VERSION,
	NTOR_ONION_KEY,
	NTOR_ONION_KEY_CROSSCERT,
	ONION_KEY,
	ONION_KEY_CROSSCERT,
	OPT,
	OR_ADDRESS,
	P,
	P6,
	PACKAGE,
	PADDING_COUNTS,
	PARAMS,
	PLATFORM,
	PR,
	PROTO,
	PROTOCOLS,
	PUBLISHED,
	R,
	READ_HISTORY,
	RECOMMENDED_CLIENT_PROTOCOLS,
	RECOMMENDED_RELAY_PROTOCOLS,
	RECOMMENDED_SOFTWARE,
	REJECT,
	REQUIRED_CLIENT_PROTOCOLS,
	REQUIRED_RELAY_PROTOCOLS,
	ROUTER,
	ROUTER_DIGEST,
	ROUTER_DIGEST_SHA256,
	ROUTER_SIGNATURE,
	ROUTER_SIG_ED25519,
	ROUTER_STATUS,
	RUNNING_ROUTERS,
	S,
	SERVER_VERSIONS,
	SHARED_RAND_COMMIT,
	SHARED_RAND_CURRENT_VALUE,
	SHARED_RAND_PARTICIPATE,
	SHARED_RAND_PREVIOUS_VALUE,
	SIGNED_DIRECTORY,
	SIGNING_KEY,
	TRANSPORT,
	TUNNELLED_DIR_SERVER,
	UPTIME,
	V,
	VALID_AFTER,
	VALID_UNTIL,
	VOTE_DIGEST,
	VOTE_STATUS,
	VOTING_DELAY,
	W,
	WRITE_HISTORY
};

class KeyFactory {
public:
	static void initialize();
	static Key fromString(const std::string &str);
private:
	static bool sInitialized;
	static boost::unordered_map<std::string, Key> sNameKeyHashMap;
};
